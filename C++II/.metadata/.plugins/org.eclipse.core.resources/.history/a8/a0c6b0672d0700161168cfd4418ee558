//============================================================================
// DESCRIPTION : Lab Five  C++II ToUpper Inheritance Class, with myStringClass.
// CLASS       : COSC 1437.S02 â€“ Lab 4
// AUTHOR      : Matthew Dowell
// DATE        : 04/06/2015
//============================================================================

#include "Array.h" //a generic class object array with template parameters
#include "Student.h"
#include <fstream> //fstream is used for file operations.
//http://www.cplusplus.com/reference/fstream/fstream/
#include <vector>


#include <iostream>

using namespace std; 

int main (){

  vector <Student> studentVArray;
  Array  <Student, 0, 25>;
  fstream studentFile;
  int i = 0;

 /*Create .txt file test, location is project folder, (does not appear in workspace)
  fileTest.open("testfile123.txt");
  	  fileTest << "Hello World \n";
  fileTest.close();
  cout << "File has been written!";
 */
  
  studentFile.open("Lab06data.txt",  // giving the file a name
			ios_base::in | // open the file for input (to read from the file)
							//with this option, the file must exist or the open fails
							//for ifstream types, this option is there by default
			ios_base::out /* | //open the file for output (writing to the file)
							//for ofstream types, this option is there by default
							//if used with ios_base::in, the file must exist or the open fails.
								//otherwise if the file does not exist, it will be created
							//if used by itself and the file does exist, it will be be destroyed.

			ios_base::ate | //"ate" or  At The End, open the file and goes to the end of the file
								//you CAN back up and write over what is already there
			ios_base::app | //"app" or Append, open the file and go to the end of the file.
								//if you back up and try to write, it will automatically move you
								//to the end of file and write there, prevents overwrite.
								//really great for log files for program records.

			ios_base::trunc | //"trunc" or Tuncate, truncates or DELETES the file when you open it.

			ios_base::binary  //"binary" A MISNOMER here. This refers to how the compiler interperets the the newline character \n.
								//files can be opened two ways, text (cooked), or binary (raw),
								//in files, there is some automatic conversions of the bit stream,
								//if you have a text file, you might want the \n code to be converted for readability
								//if you have a .jpg or something, you don't want a combination of bits that looks like the \n charater to screw with your picture.
								//an image to print out a cr/lf "carraige return line feed" or a line  return \n
								//IF YOU DON'T SPECIFY BINARY,  TEXT Mode is the DEFAULT"
		*/);

  if (studentFile.is_open ()){
	  cout << "File is open" << endl;
  } else
	  cout << "File is not open" << endl;
  
  while(studentFile[i++].Read(studentFile));

  
  return 0; 
}

/*
 *
 */
