/*
 * toUpperclass.h
 *
 *  Created on: Apr 11, 2016
 *      Author: mbd06b
 */

#ifndef UCSTRING_H_
#define UCSTRING_H_



class UCString : public String{

public:
					UCString();
					~UCString();

private:
		size_t	numChars; //size_t aka unsigned long (positive only)
		size_t numSlots;
		char * pData;

		//variables for concatenation
		size_t numTempChars;
		char * pTempData;

};

#endif /* UCSTRING_H_ */


UCString::UCString(){

	numChars = 0;
	numSlots = 0;
	pData


};

UCString::~UCString(){
};
//Default Constructor  - "one with no parameters to initialize the class to empty;"
UCString::UCString (){


	numChars = 0;
	numTempChars = 0;
	numSlots = numChars;
	pTempData = 0;
	pData = new char [numChars +1];
	pData [0] = '\0';

};

//C-TYPE Constructor one with a pointer to a “C” type string as a parameter to initialize the class to contain a copy of that string;
UCString::UCString (const char str [] ){

	numChars = strlen (str);
	numSlots = numChars;
	numTempChars = 0;
	pTempData = 0;
	pData = new char [numSlots + 1];
	strcpy (pData, str);


};

//Copy Constructor- "and one with a parameter that is of class String to initialize to a copy of that value."
UCString::UCString (const String & str){
		numChars = str.numChars;
		numSlots = numChars;
		numTempChars = 0;
		pTempData = str.pTempData;
		pData = new char [numChars + 1];
		strcpy (pData, str.pData);
}
