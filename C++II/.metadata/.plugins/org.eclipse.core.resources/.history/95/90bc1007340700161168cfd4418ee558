
#ifndef STUDENT_H_
#define STUDENT_H_

#include "Name.h"
#include "Array.h"
#include <fstream>
#include <stdlib.h>



class Student {

	public:
						Student ();
						Student (const Student &);
						Student (const Name &, const Array<int, 0, 4> &);
						~Student ();

				bool	 Read	(ifstream & in);
				void 	 getGrades (char [], int []);
				void 	 showGrades (int []);



	private:
		Name lastName;
		Array <int, 0, 4> grades; //five integer slots
};

Student::Student(){
}

Student::Student (const Student & student){
	lastName = student.lastName;
	grades = student.grades;
};

Student::~Student(){
}


inline bool  Student::Read (ifstream & in){

	char Array [81];

	in.getline(Array,81);

	if(strcmp(Array, "EOF") != 0){
		//get grades
		return true;
	}else{
		return false;
	}
}


void getGrades (char Line [], int Grades []){

	char * pNumber;
	int i = 0;
	pNumber = strtok (Line, ","); // strtok dilimeates a C-type String by whatever character you put in the argument, (commas ",");
	while (pNumber != NULL){
		Grades [i++] = atoi (pNumber); //atoi changes the ascii code into
		pNumber = strtok (NULL, ",");

	}
}

void showGrades (int Grades []){
	int i;

	for (i = 0; i < 5; i++){
		cout << Grades [i] << endl;
	}
}

#endif /* STUDENT_H_*/
