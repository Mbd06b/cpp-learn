//============================================================================
// Name        : (11-09).cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;

#include "Party.h"
#include "Plane.h"
#include "Commands.h"

void InitPlane (Plane &, int); // prototype  '&' allwos us to pass the STRUCTURE itself to change it. Rather than a single value.



int main() {

	Plane Lounge;
	Plane Alpha;
	Plane Bravo;
	int Size;


	//Switch to handle the questions (Which Plane, Which Party, Which
	switch (GetCommand())
		{
		case CmdAlpha:
			Size = ReadInt ();
			InitPlane (Alpha,  Size);
							/*  REPLACED BY INIT PLANE FUNCTIONS
								Alpha.NumSeats = Size;
								Alpha.NumEmpty = Size; //first time I show up, all the seats are empty.
								Alpha.NumParties = 0;
								Alpha.Parties =  new Party [Size]; //dynamic array of paties, maximum number of parties we can have is "Size".
								*/
			break;
		case CmdBravo:
			Size = ReadInt ();
			InitPlane (Bravo, Size);

						break;
		case CmdLounge:
			Size = ReadInt ();
						Lounge.NumSeats = Size;
						Lounge.NumEmpty = Size; //first time I show up, all the seats are empty.
						Lounge.NumParties = 0;
						Lounge.Parties =  new Party [Size]; //dynamic array of paties, maximum number of parties we can have is "Size".

						break;
		case CmdFly:
				//Get which plane we are flying
				//Print names of all parties on board
				//Delete the names of each party on board free up our dynamic memory. (delete [] ?Array)
				//Set number of parties on plane to 0
				//Set number of empty seats on plane to max value.
		case CmdArrive:
		case CmdShutdown:
			delete [] Party;
			break;
		case CmdInvalid:
					cout << "Invalid Command, try again" << endl;
					break;
		default:
				cout << "Internal error #1, contact customer support" << endl; //this is a common error message that people should never see
		}


	return 0;
}

void InitPlane (Plane & P, int Size){   //& we are passing by reference because we want to change things. Allows us to pass the STRUCTURE itself.
				P.NumSeats = Size;
				P.NumEmpty = Size; //first time I show up, all the seats are empty.
				P.NumParties = 0;
				P.Parties =  new Party [Size]; //dynamic array of paties, maximum number of parties we can have is "Size".

}
